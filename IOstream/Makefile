# 定义C编译器为gcc
CC := gcc

# 编译并运行fopen_test目标，依赖fopen_test.c源文件
fopen_test: fopen_test.c
# gcc -o fopen_test fopen_test.c
	# 使用CC编译器编译fopen_test.c，生成fopen_test可执行文件
	-$(CC) -o $@ $^
# ./fopen_test
	# 运行生成的fopen_test可执行文件
	-./$@
# rm ./fopen_test
	# 删除生成的fopen_test可执行文件
	-rm ./$@

# 编译并运行fclose_test目标，依赖fclose_test.c源文件
fclose_test: fclose_test.c
# gcc -o fopen_test fopen_test.c
	# 使用CC编译器编译fclose_test.c，生成fclose_test可执行文件
	-$(CC) -o $@ $^
# ./fopen_test
	# 运行生成的fclose_test可执行文件
	-./$@
# rm ./fopen_test
	# 删除生成的fclose_test可执行文件
	-rm ./$@

# 编译并运行fputc_test目标，依赖fputc_test.c源文件
fputc_test: fputc_test.c
	# 使用CC编译器编译fputc_test.c，生成fputc_test可执行文件
	-$(CC) -o $@ $^
	# 运行生成的fputc_test可执行文件
	-./$@
	# 删除生成的fputc_test可执行文件
	-rm ./$@

# 编译并运行fputs_test目标，依赖fputs_test.c源文件
fputs_test: fputs_test.c
	# 使用CC编译器编译fputs_test.c，生成fputs_test可执行文件
	-$(CC) -o $@ $^
	# 运行生成的fputs_test可执行文件
	-./$@
	# 删除生成的fputs_test可执行文件
	-rm ./$@

# 编译并运行fprintf_test目标，依赖fprintf_test.c源文件
fprintf_test: fprintf_test.c
	# 使用CC编译器编译fprintf_test.c，生成fprintf_test可执行文件
	-$(CC) -o $@ $^
	# 运行生成的fprintf_test可执行文件
	-./$@
	# 删除生成的fprintf_test可执行文件
	-rm ./$@

# 编译并运行fgetc_test目标，依赖fgetc_test.c源文件
fgetc_test: fgetc_test.c
	# 使用CC编译器编译fgetc_test.c，生成fgetc_test可执行文件
	-$(CC) -o $@ $^
	# 运行生成的fgetc_test可执行文件
	-./$@
	# 删除生成的fgetc_test可执行文件
	-rm ./$@

# 编译并运行fgets_test目标，依赖fgets_test.c源文件	
fgets_test: fgets_test.c
	# 使用CC编译器编译fgets_test.c，生成fgets_test可执行文件
	-$(CC) -o $@ $^
	# 运行生成的fgets_test可执行文件
	-./$@
	# 删除生成的fgets_test可执行文件
	-rm ./$@

# 编译并运行fscanf_test目标，依赖fscanf_test.c源文件
fscanf_test: fscanf_test.c
	# 使用CC编译器编译fscanf_test.c，生成fscanf_test可执行文件
	-$(CC) -o $@ $^
	# 运行生成的fscanf_test可执行文件
	-./$@
	# 删除生成的fscanf_test可执行文件
	-rm ./$@

# 编译并运行stdin_out_err_test目标，依赖stdin_out_err_test.c源文件
stdin_out_err_test: stdin_out_err_test.c
	# 使用CC编译器编译stdin_out_err_test.c，生成stdin_out_err_test可执行文件
	-$(CC) -o $@ $^
	# 运行生成的stdin_out_err_test可执行文件
	-./$@
	# 删除生成的stdin_out_err_test可执行文件
	-rm ./$@

# 编译并运行open_test目标，依赖open_test.c源文件
open_test: open_test.c
	# 使用CC编译器编译open_test.c，生成open_test可执行文件
	-$(CC) -o $@ $^
	# 运行生成的open_test可执行文件
	-./$@
	# 删除生成的open_test可执行文件
	-rm ./$@

# 编译并运行system_call_test目标，依赖system_call_test.c源文件
system_call_test: system_call_test.c
	# 使用CC编译器编译system_call_test.c，生成system_call_test可执行文件
	-$(CC) -o $@ $^
	# 运行生成的system_call_test可执行文件
	-./$@
	# 删除生成的system_call_test可执行文件
	-rm ./$@