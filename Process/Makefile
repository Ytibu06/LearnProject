# 定义C编译器为gcc
CC := gcc

# 编译并运行system_test目标，依赖system_test.c源文件
system_test:system_test.c
	# 使用CC编译器编译system_test.c，生成system_test可执行文件
	-$(CC) -o $@ $^
	# 运行生成的system_test可执行文件
	-./$@
	# 删除生成的system_test可执行文件
	-rm ./$@


# 编译并运行fork_test目标，依赖fork_test.c源文件
fork_test:fork_test.c
	# 使用CC编译器编译fork_test.c，生成fork_test可执行文件
	-$(CC) -o $@ $^
	# 运行生成的fork_test可执行文件
	-./$@
	# 删除生成的fork_test可执行文件
	-rm ./$@


# 编译并运行fork_fd_test目标，依赖fork_fd_test.c源文件
fork_fd_test:fork_fd_test.c
	# 使用CC编译器编译fork_fd_test.c，生成fork_fd_test可执行文件
	-$(CC) -o $@ $^
	# 运行生成的fork_fd_test可执行文件
	-./$@
	# 删除生成的fork_fd_test可执行文件
	-rm ./$@

# 编译test目标，依赖test.c源文件
test : test.c
	# 使用CC编译器编译test.c，生成test可执行文件
	-$(CC) -o $@ $^


# 编译并运行execve_test目标，依赖execve_test.c源文件
execve_test:execve_test.c
	# 使用CC编译器编译execve_test.c，生成execve_test可执行文件
	-$(CC) -o $@ $^
	# 运行生成的execve_test可执行文件
	-./$@
	# 删除生成的execve_test可执行文件
	-rm ./$@


# 编译并运行fork_execve_test目标，依赖fork_execve_test.c源文件
fork_execve_test:fork_execve_test.c
	# 使用CC编译器编译fork_execve_test.c，生成fork_execve_test可执行文件
	-$(CC) -o $@ $^
	# 运行生成的fork_execve_test可执行文件
	-./$@
	# 删除生成的fork_execve_test可执行文件
	-rm ./$@


# 编译并运行waitpid_test目标，依赖waitpid_test.c源文件
waitpid_test:waitpid_test.c
	# 使用CC编译器编译waitpid_test.c，生成waitpid_test可执行文件
	-$(CC) -o $@ $^
	# 运行生成的waitpid_test可执行文件
	-./$@
	# 删除生成的waitpid_test可执行文件
	-rm ./$@


# 编译并运行pstree_test目标，依赖pstree_test.c源文件
pstree_test:pstree_test.c
	# 使用CC编译器编译pstree_test.c，生成pstree_test可执行文件
	-$(CC) -o $@ $^
	# 运行生成的pstree_test可执行文件
	-./$@
	# 删除生成的pstree_test可执行文件
	-rm ./$@

# 编译block_test目标，依赖block_test.c源文件
block_test : block_test.c
	# 使用CC编译器编译block_test.c，生成block_test可执行文件
	-$(CC) -o $@ $^


# 编译并运行orphan_process_test目标，依赖orphan_process_test.c源文件
orphan_process_test:orphan_process_test.c
	# 使用CC编译器编译orphan_process_test.c，生成orphan_process_test可执行文件
	-$(CC) -o $@ $^
	# 运行生成的orphan_process_test可执行文件
	-./$@
	# 删除生成的orphan_process_test可执行文件
	-rm ./$@


# 编译并运行perror_test目标，依赖perror_test.c源文件
perror_test:perror_test.c
	# 使用CC编译器编译perror_test.c，生成perror_test可执行文件
	-$(CC) -o $@ $^
	# 运行生成的perror_test可执行文件
	-./$@
	# 删除生成的perror_test可执行文件
	-rm ./$@


# 编译并运行errorno_test目标，依赖errorno_test.c源文件
errorno_test : errorno_test.c
	# 使用CC编译器编译errorno_test.c，生成errorno_test可执行文件
	-$(CC) -o $@ $^
	# 运行生成的errorno_test可执行文件
	-./$@
	# 删除生成的errorno_test可执行文件
	-rm ./$@


# 编译并运行process_test目标，依赖process_test.c源文件
process_test : process_test.c
	# 使用CC编译器编译process_test.c，生成process_test可执行文件
	-$(CC) -o $@ $^
	# 运行生成的process_test可执行文件
	-./$@
	# 删除生成的process_test可执行文件
	-rm ./$@